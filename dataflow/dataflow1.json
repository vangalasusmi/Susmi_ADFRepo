{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "SQLDB1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1Ds",
						"type": "DatasetReference"
					},
					"name": "SQLDB2"
				}
			],
			"transformations": [
				{
					"name": "RemoveAdress2"
				},
				{
					"name": "OnlyCanada"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          AddressID as integer,",
				"          AddressLine1 as string,",
				"          AddressLine2 as string,",
				"          City as string,",
				"          StateProvince as string,",
				"          CountryRegion as string,",
				"          PostalCode as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 200,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 select(mapColumn(",
				"          AddressID,",
				"          AddressLine1,",
				"          City,",
				"          StateProvince,",
				"          CountryRegion,",
				"          PostalCode,",
				"          rowguid,",
				"          ModifiedDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveAdress2",
				"RemoveAdress2 filter(CountryRegion=='Canada') ~> OnlyCanada",
				"OnlyCanada split(StateProvince=='Ontario',",
				"     StateProvince=='British Columbia',",
				"     disjoint: false) ~> split1@(OnlyOntario, OnlyBC)",
				"split1@OnlyOntario sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          AddressID as integer,",
				"          AddressLine1 as string,",
				"          City as string,",
				"          StateProvince as string,",
				"          CountryRegion as string,",
				"          PostalCode as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SQLDB1",
				"split1@OnlyBC sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          AddressID as integer,",
				"          AddressLine1 as string,",
				"          AddressLine2 as string,",
				"          City as string,",
				"          StateProvince as string,",
				"          CountryRegion as string,",
				"          PostalCode as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SQLDB2"
			]
		}
	}
}